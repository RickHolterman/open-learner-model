const RULES = {
  ASSOCIATIVITY: [
    'logic.propositional.assoc',
    'logic.propositional.assocand',
    'logic.propositional.assocor',
    'logic.propositional.buggy.assimp',
    'logic.propositional.buggy.assoc',
  ],
  ABSORPTION: [
    'logic.propositional.absorption',
    'logic.propositional.absorpor.inv',
    'logic.propositional.absorpand.inv',
    'logic.propositional.absorpor-subset',
    'logic.propositional.absorpand',
    'logic.propositional.absorpor',
    'logic.propositional.buggy.absor',
    'logic.propositional.buggy.absor2',
  ],
  COMMUTATIVITY: [
    'logic.propositional.comm',
    'logic.propositional.commutativity',
    'logic.propositional.command',
    'logic.propositional.commor',
    'logic.propositional.commor.sort',
    'logic.propositional.command.sort',
    'logic.propositional.complor.sort',
    'logic.propositional.compland.sort',
    'logic.propositional.idempor.sort',
    'logic.propositional.idempand.sort',
    'logic.propositional.top-is-and.com',
    'logic.propositional.top-is-or.com',
    'logic.propositional.command.common-literal-special',
    'logic.propositional.command.common-literal',
    'logic.propositional.absorpor-subset-sort',
    'logic.propositional.absorpor-subset-com',
  ],
  DE_MORGAN: [
    'logic.propositional.buggy.demorgan1',
    'logic.propositional.buggy.demorgan2',
    'logic.propositional.buggy.demorgan3',
    'logic.propositional.buggy.demorgan3.inv',
    'logic.propositional.buggy.demorgan4.inv',
    'logic.propositional.buggy.demorgan4',
    'logic.propositional.buggy.demorgan5',
    'logic.propositional.demorgan',
    'logic.propositional.demorganor',
    'logic.propositional.demorganand',
    'logic.propositional.gendemorganand',
    'logic.propositional.gendemorganor',
    'logic.propositional.demorganornot',
    'logic.propositional.demorganandnot',
    'logic.propositional.invdemorganand',
    'logic.propositional.invdemorganor',
    'logic.propositional.specialdemorgan',
  ],
  DISTRIBUTION: [
    'logic.propositional.distribution',
    'logic.propositional.andoveror',
    'logic.propositional.oroverand',
    'logic.propositional.genandoveror',
    'logic.propositional.genoroverand',
    'logic.propositional.invoroverand',
    'logic.propositional.invandoveror',
    'logic.propositional.distrornot',
    'logic.propositional.andoveror.inv.common-literal',
    'logic.propositional.specialdistrnotr',
    'logic.propositional.buggy.andoverand',
    'logic.propositional.buggy.distr',
    'logic.propositional.buggy.distr.inv',
    'logic.propositional.buggy.distrnot',
    'logic.propositional.buggy.oroveror',
  ],
  DOUBLE_NEGATION: [
    'notnot.inv',
    'logic.propositional.doublenegation',
    'logic.propositional.notnot',
    'logic.propositional.geninvdoublenegand',
    'logic.propositional.geninvdoublenegor',
    'logic.propositional.notnot.inv',
  ],
  EQUIVALENCE_DEFINITION: [
    'defequiv.inv',
    'logic.propositional.equivalence',
    'logic.propositional.defequiv',
    'logic.propositional.defequiv.inv',
    'logic.propositional.buggy.equivelim1',
    'logic.propositional.buggy.equivelim2',
    'logic.propositional.buggy.equivelim3',
    'logic.propositional.buggy.idemequiv',
    'logic.propositional.buggy.idemequiv.inv',
  ],
  F_RULE_COMPLEMENT: [
    'logic.propositional.falsecomplement',
    'logic.propositional.compland',
    'logic.propositional.compland.inv',
    'logic.propositional.buggy.andcompl',
    'logic.propositional.buggy.andcompl.inv',
    'logic.propositional.buggy.andcompl2',
  ],
  F_RULE_CONJUNCTION: [
    'logic.propositional.falseconjunction',
    'logic.propositional.falsezeroand',
    'logic.propositional.falsezeroand.inv',
  ],
  F_RULE_DISJUNCTION: [
    'falsezeroor.inv',
    'logic.propositional.falsedisjunction',
    'logic.propositional.falsezeroor',
    'logic.propositional.falsezeroor.inv',
  ],
  F_RULE_NOT_T: [
    'nottrue.inv',
    'logic.propositional.group-nottrue',
    'logic.propositional.nottrue',
    'logic.propositional.nottrue.inv',
  ],
  IDEMPOTENCY: [
    'logic.propositional.idempotency',
    'logic.propositional.idempor',
    'logic.propositional.idempor.inv',
    'logic.propositional.idempand',
    'logic.propositional.idempand.inv',
    'logic.propositional.invidempor',
    'logic.propositional.invidempand',
    'logic.propositional.buggy.andsame',
    'logic.propositional.buggy.orsame',
    'logic.propositional.buggy.idemimp',
    'logic.propositional.buggy.idemimp.inv',
  ],
  IMPLICATION_DEFINITION: [
    'defimpl.inv',
    'logic.propositional.implication',
    'logic.propositional.defimpl',
    'logic.propositional.defimpl.inv',
    'logic.propositional.buggy.commimp',
    'logic.propositional.buggy.implelim',
    'logic.propositional.buggy.implelim.inv',
    'logic.propositional.buggy.implelim1',
    'logic.propositional.buggy.implelim2',
    'logic.propositional.buggy.implelim3',
    'logic.propositional.buggy.implnotelim',
    'logic.propositional.buggy.notoverimpl',
  ],
  T_RULE_COMPLEMENT: [
    'logic.propositional.truecomplement',
    'logic.propositional.complor',
    'logic.propositional.complor.inv',
    'logic.propositional.introcompl',
    'logic.propositional.buggy.orcompl',
    'logic.propositional.buggy.orcompl.inv',
    'logic.propositional.buggy.orcompl2',
  ],
  T_RULE_CONJUNCTION: [
    'truezeroand.inv',
    'logic.propositional.trueconjunction',
    'logic.propositional.truezeroand',
    'logic.propositional.truezeroand.inv',
    'logic.propositional.introtrueleft',
  ],
  T_RULE_DISJUNCTION: [
    'logic.propositional.truedisjunction',
    'logic.propositional.truezeroor',
    'logic.propositional.truezeroor.inv',
  ],
  T_RULE_NOT_F: [
    'notfalse.inv',
    'logic.propositional.group-notfalse',
    'logic.propositional.notfalse',
    'logic.propositional.notfalse.inv',
  ],
};

export { RULES };

/*
  'logic.propositional.buggy.falseprop',
  'logic.propositional.buggy.falseprop.inv'

  Bovenstaande rules zijn niet bruikbaar omdat er niet uit af te leiden valt of hier een fout is gemaakt in:
  - F-rule disjunction, of
  - F-rule conjunction

  'logic.propositional.buggy.trueprop'
  'logic.propositional.buggy.trueprop.inv'

  Bovenstaande zijn niet bruikbaar omdat niet zeker is of het gaat om:
  - T-rule disjunction, of
  - T-rule conjunction

*/
